{"version":3,"file":"static/js/547.41ee6c7f.chunk.js","mappings":"mPACA,EAAuB,2BAAvB,EAA0D,4B,SCM7CA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAGMC,EAAW,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACrB,SAATD,EACFP,EAAYQ,GACM,UAATD,EACTL,EAAaM,GAEbJ,EAAgBI,EAEnB,EA6CD,OACE,kBAAMC,UAAWC,EAAUC,SA5CR,SAAAC,GACnBA,EAAEC,iBAGGd,GAAaE,GAAcE,EAOhCP,GACEkB,EAAAA,EAAAA,IAAc,CACZP,KAAMR,EACNgB,MAAOd,EACPe,SAAUb,KAGXc,SACAC,MAAK,SAAAC,GAKJC,QAAQC,IAAI,2BAA4BF,GACxCG,IAAAA,OAAAA,QAAA,uEACgBvB,EADhB,oIAGD,IACAwB,OAAM,SAAAC,GACLF,IAAAA,OAAAA,QAAA,sDACcE,EADd,+LAGD,IA3BDF,IAAAA,OAAAA,QAAA,6JAmCH,EAGoDG,aAAa,MAAhE,WACE,mBAAOhB,UAAWC,EAAlB,sBAEE,kBACED,UAAU,oBAEViB,YAAY,SACZ,aAAW,SACXC,KAAK,OACLpB,KAAK,OACLqB,SAAUvB,EACVG,MAAOT,QAGX,mBAAOU,UAAWC,EAAlB,mBAEE,kBACED,UAAU,oBAEViB,YAAY,SACZ,aAAW,SACXC,KAAK,QACLpB,KAAK,QACLqB,SAAUvB,EACVG,MAAOP,QAGX,mBAAOQ,UAAWC,EAAlB,sBAEE,kBACED,UAAU,oBAEViB,YAAY,SACZ,aAAW,SACXC,KAAK,WACLpB,KAAK,WACLqB,SAAUvB,EACVG,MAAOL,QAGX,mBAAQwB,KAAK,SAASlB,UAAU,0BAAhC,wBAKL,EChHc,SAASoB,IACtB,OACE,0BACE,SAAClC,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import Notiflix from 'notiflix';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchRegister } from 'redux/auth/fetchAuth';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  // Записую дані полів інпут у відповідні стейти\n  const getInput = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setUserName(value);\n    } else if (name === 'email') {\n      setUserEmail(value);\n    } else {\n      setUserPassword(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const form = e.currentTarget;\n\n    if (!userName || !userEmail || !userPassword) {\n      // alert(`Всі поля мають бути заповнені`);\n      Notiflix.Notify.failure(`Всі поля мають бути заповнені`);\n      return;\n    }\n\n    // const isLogged =\n    dispatch(\n      fetchRegister({\n        name: userName,\n        email: userEmail,\n        password: userPassword,\n      })\n    )\n      .unwrap()\n      .then(promise => {\n        // Можна і не чистити поля, бо все одно переходимо на іншу сторінку:\n        //   setUserName('');\n        //   setUserEmail('');\n        //   setUserPassword('');\n        console.log('handleSubmit >> promise:', promise);\n        Notiflix.Notify.success(\n          `Користувач ${userName} успішно зареєстрований`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `Помилка: ${error}. Можливо такий користувач вже існує.`\n        );\n      });\n\n    // Якщо помилки не було, то значить новий користувач створений і можна очистити поля\n    // if (!isLogged.error) {\n    //   setUserName('');\n    //   setUserEmail('');\n    //   setUserPassword('');\n    // }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Username\n        <input\n          className=\"form-control me-2\"\n          // type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          type=\"text\"\n          name=\"name\"\n          onChange={getInput}\n          value={userName}\n        />\n      </label>\n      <label className={css.label}>\n        Email\n        <input\n          className=\"form-control me-2\"\n          // type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          type=\"email\"\n          name=\"email\"\n          onChange={getInput}\n          value={userEmail}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          className=\"form-control me-2\"\n          // type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          type=\"password\"\n          name=\"password\"\n          onChange={getInput}\n          value={userPassword}\n        />\n      </label>\n      <button type=\"submit\" className=\"btn btn-outline-primary\">\n        Register\n      </button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","useState","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","getInput","target","name","value","className","css","onSubmit","e","preventDefault","fetchRegister","email","password","unwrap","then","promise","console","log","Notiflix","catch","error","autoComplete","placeholder","type","onChange","Register"],"sourceRoot":""}